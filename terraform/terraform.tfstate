{
  "version": 4,
  "terraform_version": "1.9.0",
  "serial": 545,
  "lineage": "6731ad95-f463-1d7b-5754-2b7eba28ff3f",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "22ad0483c30a75fc89e28af3baec271b10a446c7a684c891921c445ace920635",
            "rendered": "#!/bin/bash\n\nset -e  # Interrompe o script em caso de erro\n\necho \"ðŸ”¹ Atualizando pacotes e instalando dependÃªncias...\"\napt-get update -y\napt-get install -y apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release ufw\n\necho \"ðŸ”¹ Adicionando chave GPG e repositÃ³rio oficial do Docker...\"\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n\necho \"ðŸ”¹ Instalando Docker e Docker Compose...\"\napt-get update -y\napt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\necho \"ðŸ”¹ Iniciando e habilitando o Docker...\"\nsystemctl start docker\nsystemctl enable docker\n\necho \"ðŸ”¹ Criando grupo 'docker' e ajustando permissÃµes...\"\nif ! getent group docker \u003e /dev/null; then\n  groupadd docker\nfi\nusermod -aG docker ubuntu\nchown ubuntu:docker /var/run/docker.sock\n\necho \"ðŸ”¹ Reiniciando o Docker...\"\nsystemctl restart docker\n\necho \"ðŸ”¹ Criando rede Docker para os containers Zabbix...\"\ndocker network rm zabbix-net || true  # Remove a rede se jÃ¡ existir\ndocker network create --subnet=172.20.0.0/16 --ip-range=172.20.240.0/20 zabbix-net\n\necho \"ðŸ”¹ Criando diretÃ³rios para persistÃªncia de dados...\"\nmkdir -p /opt/zabbix/postgres /opt/zabbix/server /opt/zabbix/web /opt/grafana/data\n\necho \"ðŸ”¹ Ajustando permissÃµes para o Grafana...\"\nchown 472:472 /opt/grafana/data\nchmod 755 /opt/grafana/data\n\necho \"âœ… Subindo o container PostgreSQL...\"\ndocker run -d \\\n  --name postgres-server \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -v /opt/zabbix/postgres:/var/lib/postgresql/data \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  postgres:latest\n\necho \"ðŸ”¹ Aguardando o PostgreSQL iniciar...\"\nuntil docker exec postgres-server pg_isready -U zabbix; do\n    sleep 5\n    echo \"âŒ› Aguardando PostgreSQL...\"\ndone\necho \"âœ… PostgreSQL estÃ¡ pronto!\"\n\necho \"âœ… Subindo o Zabbix Server...\"\ndocker run -d \\\n  --name zabbix-server \\\n  -e DB_SERVER_HOST=\"postgres-server\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -v /opt/zabbix/server:/var/lib/zabbix \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-server-pgsql:latest\n\necho \"ðŸ”¹ Aguardando o Zabbix Server iniciar...\"\nsleep 10\n\necho \"âœ… Subindo o Zabbix Web Interface...\"\ndocker run -d \\\n  --name zabbix-web-nginx-pgsql \\\n  -e ZBX_SERVER_HOST=\"zabbix-server\" \\\n  -e DB_SERVER_HOST=\"postgres-server\" \\\n  -e DB_SERVER_TYPE=\"POSTGRESQL\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -e PHP_TZ=\"America/Sao_Paulo\" \\\n  --publish 8080:80 \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-web-nginx-pgsql:latest\n\necho \"âœ… Ajustando permissÃµes no Zabbix Web (Nginx e PHP-FPM)...\"\ndocker exec -u root zabbix-web-nginx-pgsql bash -c \"\n  chmod 1777 /tmp \u0026\u0026\n  chown -R zabbix:zabbix /tmp \u0026\u0026\n  mkdir -p /var/run/php \u0026\u0026\n  chown zabbix:zabbix /var/run/php \u0026\u0026\n  chmod 777 /var/run/php \u0026\u0026\n  mkdir -p /var/log \u0026\u0026\n  touch /var/log/php-fpm.log \u0026\u0026\n  chown zabbix:zabbix /var/log/php-fpm.log \u0026\u0026\n  chmod 777 /var/log/php-fpm.log \u0026\u0026\n  echo '\n  server {\n      listen 80;\n      server_name _;\n\n      root /usr/share/zabbix;\n      index index.php index.html index.htm;\n\n      location / {\n          try_files \\$uri \\$uri/ =404;\n      }\n\n      location ~ \\.php$ {\n          include fastcgi_params;\n          fastcgi_pass 127.0.0.1:9000;\n          fastcgi_index index.php;\n          fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;\n      }\n\n      error_log /var/log/nginx/error.log;\n      access_log /var/log/nginx/access.log;\n  }\n  ' \u003e /etc/nginx/http.d/default.conf \u0026\u0026\n  nginx -s reload \u0026\u0026\n  php-fpm83 -D\n\"\n\necho \"âœ… Subindo o Zabbix Agent...\"\ndocker run -d \\\n  --name zabbix-agent \\\n  -e ZBX_SERVER_HOST=\"zabbix-server\" \\\n  -e ZBX_HOSTNAME=\"zabbix-agent-ec2\" \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-agent:latest\n\necho \"âœ… Subindo o Grafana...\"\ndocker run -d \\\n  --name grafana \\\n  -e GF_SECURITY_ADMIN_USER=\"admin\" \\\n  -e GF_SECURITY_ADMIN_PASSWORD=\"admin\" \\\n  -v /opt/grafana/data:/var/lib/grafana \\\n  --publish 3000:3000 \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  grafana/grafana:latest\n\necho \"âœ… Configurando firewall para permitir acesso ao Zabbix e Grafana...\"\nufw allow 8080/tcp\nufw allow 3000/tcp\nufw enable -y\n\necho \"âœ… Verificando containers em execuÃ§Ã£o...\"\ndocker ps\n\necho \"âœ… ConfiguraÃ§Ã£o finalizada!\"\necho \"ðŸ”¹ Acesse o Zabbix Web em: http://$(curl -s ifconfig.me):8080\"\necho \"ðŸ”¹ Acesse o Grafana em: http://$(curl -s ifconfig.me):3000 (UsuÃ¡rio: admin | Senha: admin)\"\n",
            "template": "#!/bin/bash\n\nset -e  # Interrompe o script em caso de erro\n\necho \"ðŸ”¹ Atualizando pacotes e instalando dependÃªncias...\"\napt-get update -y\napt-get install -y apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release ufw\n\necho \"ðŸ”¹ Adicionando chave GPG e repositÃ³rio oficial do Docker...\"\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n\necho \"ðŸ”¹ Instalando Docker e Docker Compose...\"\napt-get update -y\napt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\necho \"ðŸ”¹ Iniciando e habilitando o Docker...\"\nsystemctl start docker\nsystemctl enable docker\n\necho \"ðŸ”¹ Criando grupo 'docker' e ajustando permissÃµes...\"\nif ! getent group docker \u003e /dev/null; then\n  groupadd docker\nfi\nusermod -aG docker ubuntu\nchown ubuntu:docker /var/run/docker.sock\n\necho \"ðŸ”¹ Reiniciando o Docker...\"\nsystemctl restart docker\n\necho \"ðŸ”¹ Criando rede Docker para os containers Zabbix...\"\ndocker network rm zabbix-net || true  # Remove a rede se jÃ¡ existir\ndocker network create --subnet=172.20.0.0/16 --ip-range=172.20.240.0/20 zabbix-net\n\necho \"ðŸ”¹ Criando diretÃ³rios para persistÃªncia de dados...\"\nmkdir -p /opt/zabbix/postgres /opt/zabbix/server /opt/zabbix/web /opt/grafana/data\n\necho \"ðŸ”¹ Ajustando permissÃµes para o Grafana...\"\nchown 472:472 /opt/grafana/data\nchmod 755 /opt/grafana/data\n\necho \"âœ… Subindo o container PostgreSQL...\"\ndocker run -d \\\n  --name postgres-server \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -v /opt/zabbix/postgres:/var/lib/postgresql/data \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  postgres:latest\n\necho \"ðŸ”¹ Aguardando o PostgreSQL iniciar...\"\nuntil docker exec postgres-server pg_isready -U zabbix; do\n    sleep 5\n    echo \"âŒ› Aguardando PostgreSQL...\"\ndone\necho \"âœ… PostgreSQL estÃ¡ pronto!\"\n\necho \"âœ… Subindo o Zabbix Server...\"\ndocker run -d \\\n  --name zabbix-server \\\n  -e DB_SERVER_HOST=\"postgres-server\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -v /opt/zabbix/server:/var/lib/zabbix \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-server-pgsql:latest\n\necho \"ðŸ”¹ Aguardando o Zabbix Server iniciar...\"\nsleep 10\n\necho \"âœ… Subindo o Zabbix Web Interface...\"\ndocker run -d \\\n  --name zabbix-web-nginx-pgsql \\\n  -e ZBX_SERVER_HOST=\"zabbix-server\" \\\n  -e DB_SERVER_HOST=\"postgres-server\" \\\n  -e DB_SERVER_TYPE=\"POSTGRESQL\" \\\n  -e POSTGRES_USER=\"zabbix\" \\\n  -e POSTGRES_PASSWORD=\"zabbix_pwd\" \\\n  -e POSTGRES_DB=\"zabbix\" \\\n  -e PHP_TZ=\"America/Sao_Paulo\" \\\n  --publish 8080:80 \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-web-nginx-pgsql:latest\n\necho \"âœ… Ajustando permissÃµes no Zabbix Web (Nginx e PHP-FPM)...\"\ndocker exec -u root zabbix-web-nginx-pgsql bash -c \"\n  chmod 1777 /tmp \u0026\u0026\n  chown -R zabbix:zabbix /tmp \u0026\u0026\n  mkdir -p /var/run/php \u0026\u0026\n  chown zabbix:zabbix /var/run/php \u0026\u0026\n  chmod 777 /var/run/php \u0026\u0026\n  mkdir -p /var/log \u0026\u0026\n  touch /var/log/php-fpm.log \u0026\u0026\n  chown zabbix:zabbix /var/log/php-fpm.log \u0026\u0026\n  chmod 777 /var/log/php-fpm.log \u0026\u0026\n  echo '\n  server {\n      listen 80;\n      server_name _;\n\n      root /usr/share/zabbix;\n      index index.php index.html index.htm;\n\n      location / {\n          try_files \\$uri \\$uri/ =404;\n      }\n\n      location ~ \\.php$ {\n          include fastcgi_params;\n          fastcgi_pass 127.0.0.1:9000;\n          fastcgi_index index.php;\n          fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;\n      }\n\n      error_log /var/log/nginx/error.log;\n      access_log /var/log/nginx/access.log;\n  }\n  ' \u003e /etc/nginx/http.d/default.conf \u0026\u0026\n  nginx -s reload \u0026\u0026\n  php-fpm83 -D\n\"\n\necho \"âœ… Subindo o Zabbix Agent...\"\ndocker run -d \\\n  --name zabbix-agent \\\n  -e ZBX_SERVER_HOST=\"zabbix-server\" \\\n  -e ZBX_HOSTNAME=\"zabbix-agent-ec2\" \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  zabbix/zabbix-agent:latest\n\necho \"âœ… Subindo o Grafana...\"\ndocker run -d \\\n  --name grafana \\\n  -e GF_SECURITY_ADMIN_USER=\"admin\" \\\n  -e GF_SECURITY_ADMIN_PASSWORD=\"admin\" \\\n  -v /opt/grafana/data:/var/lib/grafana \\\n  --publish 3000:3000 \\\n  --network=zabbix-net \\\n  --restart unless-stopped \\\n  grafana/grafana:latest\n\necho \"âœ… Configurando firewall para permitir acesso ao Zabbix e Grafana...\"\nufw allow 8080/tcp\nufw allow 3000/tcp\nufw enable -y\n\necho \"âœ… Verificando containers em execuÃ§Ã£o...\"\ndocker ps\n\necho \"âœ… ConfiguraÃ§Ã£o finalizada!\"\necho \"ðŸ”¹ Acesse o Zabbix Web em: http://$(curl -s ifconfig.me):8080\"\necho \"ðŸ”¹ Acesse o Grafana em: http://$(curl -s ifconfig.me):3000 (UsuÃ¡rio: admin | Senha: admin)\"\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "ec2_instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0e2c8caa4b6378d8c",
            "arn": "arn:aws:ec2:us-east-1:008971679857:instance/i-0bd86fa803431b314",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0bd86fa803431b314",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "terraform-lab",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-0a3e5918647756a95",
            "private_dns": "ip-10-0-1-176.ec2.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.1.176",
            "public_dns": "",
            "public_ip": "54.152.110.80",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": {},
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0d9503842927a4311",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0fbe8cabbfc6c95fb",
            "tags": {
              "Name": "ZabbixServerInstance"
            },
            "tags_all": {
              "Name": "ZabbixServerInstance"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "1bac99ab9c24cc29e6032cac651c736e4fd1dafb",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0e57d94f1fe33b5cb"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_security_group.main",
            "aws_subnet.main",
            "aws_vpc.main",
            "data.template_file.user_data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:008971679857:internet-gateway/igw-04eb4c666f59ce63b",
            "id": "igw-04eb4c666f59ce63b",
            "owner_id": "008971679857",
            "tags": {
              "Name": "MyInternetGateway"
            },
            "tags_all": {
              "Name": "MyInternetGateway"
            },
            "timeouts": null,
            "vpc_id": "vpc-0c80813832768494f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:008971679857:route-table/rtb-0b03edc4a4dd9e03e",
            "id": "rtb-0b03edc4a4dd9e03e",
            "owner_id": "008971679857",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-04eb4c666f59ce63b",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "MyRouteTable"
            },
            "tags_all": {
              "Name": "MyRouteTable"
            },
            "timeouts": null,
            "vpc_id": "vpc-0c80813832768494f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.main",
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-05c775460f0deed0f",
            "route_table_id": "rtb-0b03edc4a4dd9e03e",
            "subnet_id": "subnet-0fbe8cabbfc6c95fb",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.main",
            "aws_route_table.main",
            "aws_subnet.main",
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:008971679857:security-group/sg-0e57d94f1fe33b5cb",
            "description": "Allow SSH and Zabbix access",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all outbound traffic",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0e57d94f1fe33b5cb",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Grafana",
                "from_port": 3000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3000
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow SSH",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Zabbix Agent Port",
                "from_port": 10051,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10051
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Zabbix HTTP",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Zabbix Web Port",
                "from_port": 8081,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8081
              }
            ],
            "name": "zabbix-sg",
            "name_prefix": "",
            "owner_id": "008971679857",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "ZabbixSecurityGroup"
            },
            "tags_all": {
              "Name": "ZabbixSecurityGroup"
            },
            "timeouts": null,
            "vpc_id": "vpc-0c80813832768494f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:008971679857:subnet/subnet-0fbe8cabbfc6c95fb",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0fbe8cabbfc6c95fb",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "008971679857",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "MyTerraformSubnet"
            },
            "tags_all": {
              "Name": "MyTerraformSubnet"
            },
            "timeouts": null,
            "vpc_id": "vpc-0c80813832768494f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:008971679857:vpc/vpc-0c80813832768494f",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0efef9a7cb91cb96e",
            "default_route_table_id": "rtb-0ae825f0b44cc1e80",
            "default_security_group_id": "sg-07504aa445ec8fee6",
            "dhcp_options_id": "dopt-0735b331a44b35179",
            "enable_dns_hostnames": false,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0c80813832768494f",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0ae825f0b44cc1e80",
            "owner_id": "008971679857",
            "tags": {
              "Name": "MyTerraformVPC"
            },
            "tags_all": {
              "Name": "MyTerraformVPC"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
